name: Scheduled Dev Tests

on:
  schedule:
    # Runs every day at 9:00 AM UTC (adjust as needed)
    - cron: '0 9 * * *'
  workflow_dispatch: # Allows manual trigger from GitHub UI

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        
    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Run UI Tests
      env:
        baseUrl: 'https://automationexercise.com/'
        email: ${{ secrets.email }}
        password: ${{ secrets.password }}
      run: npx playwright test
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results/
        retention-days: 30

    - name: Generate Report Index Page
      if: always()
      run: node .github/workflows/create-index.js

    - name: Create Test Summary
      if: always()
      run: node .github/workflows/generate-summary.js
      continue-on-error: true

    - name: Deploy Report to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./playwright-report
        publish_branch: gh-pages
        destination_dir: reports/${{ github.run_number }}
        keep_files: true
        user_name: github-actions[bot]
        user_email: github-actions[bot]@users.noreply.github.com
        
    - name: Comment PR with Report Link
      if: always() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸ“Š Test Report: https://${context.repo.owner}.github.io/${context.repo.repo}/reports/${{ github.run_number }}/`
          })